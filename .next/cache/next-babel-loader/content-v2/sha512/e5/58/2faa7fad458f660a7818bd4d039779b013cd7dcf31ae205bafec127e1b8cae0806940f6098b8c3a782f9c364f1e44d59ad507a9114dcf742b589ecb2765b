{"ast":null,"code":"import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { CONFIRMATION_MODAL } from '@constants/modals.constants';\nconst initialState = {\n  [CONFIRMATION_MODAL]: false\n};\nexport const modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    openModal(state, action) {\n      state[action.payload.type] = true;\n    },\n\n    closeModal(state, action) {\n      state[action.payload.type] = false;\n    }\n\n  }\n});\nexport const {\n  openModal,\n  closeModal\n} = modalSlice.actions;\nexport const confirmModalSelector = createSelector(state => state.modal, (_, type) => type, (modal, type) => modal[type]);","map":{"version":3,"sources":["/Users/might/Documents/projects/mine/nextjs/src/redux/modal.redux.ts"],"names":["createSelector","createSlice","CONFIRMATION_MODAL","initialState","modalSlice","name","reducers","openModal","state","action","payload","type","closeModal","actions","confirmModalSelector","modal","_"],"mappings":"AAAA,SACEA,cADF,EAEEC,WAFF,QAGO,kBAHP;AAIA,SAASC,kBAAT,QAAmC,6BAAnC;AAMA,MAAMC,YAAwB,GAAG;AAC/B,GAACD,kBAAD,GAAsB;AADS,CAAjC;AAIA,OAAO,MAAME,UAAU,GAAGH,WAAW,CAA4C;AAC/EI,EAAAA,IAAI,EAAE,OADyE;AAE/EF,EAAAA,YAF+E;AAG/EG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAoBC,MAApB,EAA4B;AACnCD,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeC,IAAhB,CAAL,GAA6B,IAA7B;AACD,KAHO;;AAIRC,IAAAA,UAAU,CAACJ,KAAD,EAAoBC,MAApB,EAA4B;AACpCD,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeC,IAAhB,CAAL,GAA6B,KAA7B;AACD;;AANO;AAHqE,CAA5C,CAA9B;AAaP,OAAO,MAAM;AAAEJ,EAAAA,SAAF;AAAaK,EAAAA;AAAb,IAA4BR,UAAU,CAACS,OAA7C;AAEP,OAAO,MAAMC,oBAAoB,GAAGd,cAAc,CAC/CQ,KAAD,IAAWA,KAAK,CAACO,KAD+B,EAEhD,CAACC,CAAD,EAAIL,IAAJ,KAAqBA,IAF2B,EAGhD,CAACI,KAAD,EAAQJ,IAAR,KAAiBI,KAAK,CAACJ,IAAD,CAH0B,CAA3C","sourcesContent":["import {\n  createSelector,\n  createSlice, SliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { CONFIRMATION_MODAL } from '@constants/modals.constants';\n\nexport type ModalState = {\n  [key: string]: boolean;\n};\n\nconst initialState: ModalState = {\n  [CONFIRMATION_MODAL]: false,\n};\n\nexport const modalSlice = createSlice<ModalState, SliceCaseReducers<ModalState>>({\n  name: 'modal',\n  initialState,\n  reducers: {\n    openModal(state: ModalState, action) {\n      state[action.payload.type] = true;\n    },\n    closeModal(state: ModalState, action) {\n      state[action.payload.type] = false;\n    },\n  },\n});\n\nexport const { openModal, closeModal } = modalSlice.actions;\n\nexport const confirmModalSelector = createSelector<{ modal: ModalState }, string, ModalState, string, boolean>(\n  (state) => state.modal,\n  (_, type: string) => type,\n  (modal, type) => modal[type],\n);\n"]},"metadata":{},"sourceType":"module"}