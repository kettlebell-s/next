{"ast":null,"code":"import _regeneratorRuntime from \"/Users/might/Documents/projects/mine/nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/might/Documents/projects/mine/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit';\n// import { apiUsersGetMe } from '@services/api/users.api';\nimport { apiAuthLogout } from '@services/api/auth.api';\nimport { apolloClient } from '@helpers/apollo.helper';\nimport { GET_MEMBER_QUERY } from '@constants/graphql.constants';\nexport var bindUser = createAsyncThunk('user/bindUser', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var sn, _yield$apolloClient$q, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sn = _ref.sn;\n            _context.next = 3;\n            return apolloClient.query({\n              query: GET_MEMBER_QUERY\n            });\n\n          case 3:\n            _yield$apolloClient$q = _context.sent;\n            data = _yield$apolloClient$q.data;\n            return _context.abrupt(\"return\", data.member);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var logoutUser = createAsyncThunk('user/logoutUser', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", apiAuthLogout());\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n})));\nvar initialState = null;\nexport var userSlice = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(bindUser.fulfilled, function (state, action) {\n      state = action.payload;\n      return state;\n    });\n    builder.addCase(bindUser.rejected, function (state) {\n      state = null;\n      return state;\n    });\n    builder.addCase(logoutUser.fulfilled, function (state) {\n      state = null;\n      return state;\n    });\n  }\n});\nexport var selectorUser = createSelector(function (state) {\n  return state.user;\n}, function (user) {\n  return user;\n});","map":{"version":3,"sources":["/Users/might/Documents/projects/mine/nextjs/src/redux/user.redux.ts"],"names":["createAsyncThunk","createSelector","createSlice","apiAuthLogout","apolloClient","GET_MEMBER_QUERY","bindUser","sn","query","data","member","logoutUser","initialState","userSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","selectorUser","user"],"mappings":";;AAAA,SACEA,gBADF,EACoBC,cADpB,EACoCC,WADpC,QAEO,kBAFP;AAIA;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAIA,OAAO,IAAMC,QAAQ,GAAGN,gBAAgB,CAAC,eAAD;AAAA,uEAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASO,YAAAA,EAAT,QAASA,EAAT;AAAA;AAAA,mBACjCH,YAAY,CAACI,KAAb,CAAmB;AACxCA,cAAAA,KAAK,EAAEH;AADiC,aAAnB,CADiC;;AAAA;AAAA;AAChDI,YAAAA,IADgD,yBAChDA,IADgD;AAAA,6CAMjDA,IAAI,CAACC,MAN4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAQP,OAAO,IAAMC,UAAU,GAAGX,gBAAgB,CAAC,iBAAD,wEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAYG,aAAa,EAAzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,GAAnC;AAEP,IAAMS,YAAuB,GAAG,IAAhC;AAEA,OAAO,IAAMC,SAAS,GAAGX,WAAW,CAAoD;AACtFY,EAAAA,IAAI,EAAE,MADgF;AAEtFF,EAAAA,YAAY,EAAZA,YAFsF;AAGtFG,EAAAA,QAAQ,EAAE,EAH4E;AAItFC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,QAAQ,CAACa,SAAzB,EAAoC,UAACC,KAAD,EAAQC,MAAR,EAA2C;AAC7ED,MAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACA,aAAOF,KAAP;AACD,KAHD;AAIAH,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,QAAQ,CAACiB,QAAzB,EAAmC,UAACH,KAAD,EAAW;AAC5CA,MAAAA,KAAK,GAAG,IAAR;AACA,aAAOA,KAAP;AACD,KAHD;AAIAH,IAAAA,OAAO,CAACC,OAAR,CAAgBP,UAAU,CAACQ,SAA3B,EAAsC,UAACC,KAAD,EAAW;AAC/CA,MAAAA,KAAK,GAAG,IAAR;AACA,aAAOA,KAAP;AACD,KAHD;AAID;AAjBqF,CAApD,CAA7B;AAoBP,OAAO,IAAMI,YAAY,GAAGvB,cAAc,CAAC,UAACmB,KAAD;AAAA,SAAgCA,KAAK,CAACK,IAAtC;AAAA,CAAD,EAA6C,UAACA,IAAD;AAAA,SAAUA,IAAV;AAAA,CAA7C,CAAnC","sourcesContent":["import {\n  createAsyncThunk, createSelector, createSlice, PayloadAction, SliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { UserDTO } from '@dtos/user.dto';\n// import { apiUsersGetMe } from '@services/api/users.api';\nimport { apiAuthLogout } from '@services/api/auth.api';\nimport { apolloClient } from '@helpers/apollo.helper';\nimport { GET_MEMBER_QUERY } from '@constants/graphql.constants';\n\nexport type UserState = UserDTO | null;\n\nexport const bindUser = createAsyncThunk('user/bindUser', async ({ sn }: { sn : string }) => {\n  const { data } = await apolloClient.query({\n    query: GET_MEMBER_QUERY,\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return data.member;\n});\nexport const logoutUser = createAsyncThunk('user/logoutUser', async () => apiAuthLogout());\n\nconst initialState: UserState = null;\n\nexport const userSlice = createSlice<UserDTO | null, SliceCaseReducers<UserDTO | null>>({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(bindUser.fulfilled, (state, action: PayloadAction<UserDTO>) => {\n      state = action.payload;\n      return state;\n    });\n    builder.addCase(bindUser.rejected, (state) => {\n      state = null;\n      return state;\n    });\n    builder.addCase(logoutUser.fulfilled, (state) => {\n      state = null;\n      return state;\n    });\n  },\n});\n\nexport const selectorUser = createSelector((state: { user: UserState }) => state.user, (user) => user);\n"]},"metadata":{},"sourceType":"module"}